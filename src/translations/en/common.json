{
    "nav": {
        "home": "Home",
        "skills": "Skills",
        "exp": "Experiences",
        "projects": "Projects"
    },
    "home": {
        "title": "Hi, I'm {{ name }}",
        "subtitle": "Software Engineering student at ",
        "about": "I love experiencing and learning new technologies everyday, doing my best to follow best coding practices. I’m particularly attracted by web developpement and I consider myself either as a full-stack or back-end developper.",
        "copied": "copied to clipboard"
    },
    "skills": {
        "title": "Technical skills",
        "languages": "Languages",
        "databases": "Databases",
        "unit_testing": "Unit testing",
        "others": "Others"
    },
    "exp": {
        "title": "Experiences",
        "intern": "Internship at {{ enterprise }}",
        "appartoo": {
            "dates": "july to december 2017",
            "status": "Full-stack web developer",
            "description": "Participation in the development of a linking application to search for a colocation.\nWorking on the API (back-end, Symfony3), and UX/UI (front-end, AngularJS).\nActive participation in decisions of the company, technical or not.",
            "missions": "Important missions",
            "chat": {
                "title": "Instant messaging using WebSockets",
                "main_desc": "Implementing a WebSockets server for an instant messaging feature to replace the older system using Firebase and avoid duplicating data between Firebase and the application’s relational database.",
                "list": "[\"Realtime communication with front-end (client) to show new messages in realtime\",\"Configuring a reverse proxy to use SSL\",\"Installation as a supervisor to guarantee disponibility at any time and quality logging\",\"Migrating over 130 000 user conversations from Firebase to mySQL\"]",
                "result": "Between 5 and 8 seconds of executing time gained over some website’s key features (registering, adding a post)"
            },
            "ux": {
                "title": "UX modernization and standardization",
                "main_desc": "Graphical redesign of how we display posts and profiles on the website, reusing created views all over the application for a better user comfort. Optimizing the search feature.",
                "list": "[\"Better overall design consistency and comfort during navigation\",\"Modernization of the user interface to stay up to date with actual web conventions \",\"Auto application of search filters without having to launch it manually every time\"]"
            },
            "notif": {
                "title": "Notifications system’s refactoring",
                "main_desc": "Standardization of the notifications system, adding new notifications' types (only email at the time) and code refactoring in a \"Notification Center\" service.",
                "list": "[\"Adding desktop notifications (push) using a Service Worker\",\"Supporting Facebook notifications (API Graph)\", \"Sending SMS (API Nexmo)\", \"Creating a service to handle sending all these notifications depending on certain criteria\"]",
                "result": "Possibility for users to be notified using different types of notifications in order to speed up their colocation search while improving code maintenance."
            }
        }
    },
    "projects": {
        "title": "Projects",
        "view_code": "view code on GitHub",
        "nodeApi": {
            "title": "Node.js REST API",
            "description": "Simple REST API using Express.js and Sequelize as ORM. Custom authentication using JSON Web Token (JWT) and bcrypt password encryption for security reasons.\nInclude tests using mocha and chai with circleCI for continuous integration and custom error handling."
        },
        "portfolio": {
            "title": "Personnal Portfolio",
            "description": "Fully responsive Single Page Application (SPA) built with React hosted on GitHub Pages and using Sass for styling.\nCustom scroll navigation and no css framework included. Multi languages support using i18next."
        },
        "recommendator_back": {
            "title": "The Recommendator (API)",
            "description": "hahalelrhrheh"
        },
        "recommendator_front": {
            "title": "The Recommendator (Client)",
            "description": "hahalelrhrheh"
        }
    },
    "tags": {
        "engineer": "engineer",
        "web": "web",
        "best_practices": "best practices",
        "dev": "development",
        "full_stack": "full-stack",
        "back": "back-end",
        "front": "front-end",
        "nginx": "NGiNX",
        "mySQL": "mySQL",
        "angularJS": "angularJS",
        "symfony": "Symfony",
        "doctrine": "Doctrine",
        "api": "API",
        "php": "PHP",
        "js": "JavaScript",
        "circleci": "circleCI",
        "sequelize": "Sequelize",
        "jwt": "JWT",
        "auth": "authentication",
        "unit_testing": "unit testing",
        "bcrypt": "bcrypt",
        "security": "security",
        "react": "react",
        "express": "express.js",
        "responsive": "responsive",
        "sass": "sass",
        "ui": "UI",
        "hibernate": "Hibernate",
        "postgres": "postgreSQL",
        "spring": "Spring",
        "redux": "redux",
        "refactoring": "refactoring",
        "ux": "user experience",
        "websockets": "web sockets",
        "notifications": "notifications",
        "chat": "chat",
        "security": "security",
        "heroku": "heroku",
        "java": "Java"
    }
}
